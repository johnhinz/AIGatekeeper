# This is a basic workflow to help you get started with Actions

name: Docker-Push

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2.9.0
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: ${{ secrets.DockerHubUser }}  
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: ${{ secrets.DockerHubPassword }}
          # Docker repository to tag the image with
          repository: ${{ env.ImageName }}
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: 'github-${{ env.BuildNumber }}'
          # Path to the build context
          path: 'src'
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          dockerfile: 'src/ContainerScanning.HelloWorld/Dockerfile'
          # Whether to push the image
          push: false
      - name: Push Docker image
        uses: docker/build-push-action@v2.9.0
        with:
          token: ${{ secrets:DOCKERTOKEN}}
          # Docker repository to tag the image with
          repository: ${{ env.ImageName }}
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: 'github-${{ env.BuildNumber }}'
          # Path to the build context
          path: 'src'
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          dockerfile: 'src/ContainerScanning.HelloWorld/Dockerfile'
          # Whether to push the image
          push: true
